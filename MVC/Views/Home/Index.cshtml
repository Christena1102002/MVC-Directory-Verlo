@model List<mvc.Models.Business>
@{
    ViewData["Title"] = "Home - Vyrlo";
}

<style>
    /* Hero Section */
    .hero-section {
        background: linear-gradient(rgba(44, 62, 80, 0.8), rgba(44, 62, 80, 0.8)), 
                    url('/images/hero-bg.jpg') center/cover no-repeat;
        color: white;
        padding: 5rem 0;
        margin-bottom: 0;
        border-radius: 0;
    }

    .hero-content h1 {
        font-size: 2.8rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
    }

    .hero-content p {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-bottom: 2rem;
        max-width: 600px;
    }

    .hero-search {
        background: white;
        border-radius: 50px;
        padding: 0.5rem;
        max-width: 600px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        position: relative;
    }

    .hero-search input {
        border: none;
        border-radius: 50px;
        padding-left: 1.5rem;
    }

    .hero-search input:focus {
        box-shadow: none;
    }

    .hero-search button {
        background-color: #3498db;
        border: none;
        border-radius: 50px;
        color: white;
        padding: 0.6rem 1.5rem;
        font-weight: 500;
    }

    .hero-search button:hover {
        background-color: #2980b9;
    }

    .search-suggestions {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background-color: white;
        border-radius: 0 0 10px 10px;
        box-shadow: 0 10px 20px rgba(0,0,0,0.15);
        margin-top: 5px;
        z-index: 10;
        max-height: 300px;
        overflow-y: auto;
        display: none;
        border: 1px solid #e0e0e0;
    }

    .suggestion-item {
        padding: 0.8rem 1.5rem;
        border-bottom: 1px solid #eaeaea;
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
    }

    .suggestion-item:last-child {
        border-bottom: none;
    }

    .suggestion-item:hover {
        background-color: #f0f7fc;
    }

    .suggestion-item:nth-child(odd) {
        background-color: #f8f9fa;
    }

    .suggestion-item:nth-child(odd):hover {
        background-color: #f0f7fc;
    }

    .suggestion-icon {
        margin-right: 10px;
        color: var(--primary-color);
        font-size: 0.9rem;
        width: 24px;
        height: 24px;
        background-color: rgba(52, 152, 219, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .suggestion-text {
        font-weight: 500;
        color: #2c3e50;
    }

    .suggestion-category {
        margin-left: auto;
        font-size: 0.8rem;
        color: #7f8c8d;
        background-color: #f5f5f5;
        padding: 0.2rem 0.5rem;
        border-radius: 3px;
    }

    /* Category Slider Styles */
    .categories-slider-section {
        padding: 3rem 0;
        position: relative;
        padding-left: 15px;
        padding-right: 15px;
        max-width: 1320px;
        margin-left: auto;
        margin-right: auto;
    }

    .categories-slider {
        padding: 1rem 0;
        overflow: hidden;
    }

    .swiper-container {
        padding: 1rem;
        margin: 0 -1rem;
    }

    .category-slide {
        text-align: center;
        padding: 2rem 1rem;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.06);
        transition: all 0.4s ease;
        background-color: white;
        cursor: pointer;
        height: 220px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border: 1px solid rgba(0,0,0,0.05);
    }

    .category-slide:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 30px rgba(0,0,0,0.1);
        border-color: var(--primary-color);
    }

    .category-icon {
        font-size: 3rem;
        color: var(--primary-color);
        margin-bottom: 1.2rem;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 80px;
        width: 80px;
        background-color: rgba(52, 152, 219, 0.1);
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .category-slide:hover .category-icon {
        background-color: var(--primary-color);
        color: white;
        transform: scale(1.1);
    }

    .category-slide h5 {
        font-weight: 600;
        margin-bottom: 0.5rem;
        font-size: 1.2rem;
        color: var(--secondary-color);
    }

    .category-slide p {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .swiper-button-next, .swiper-button-prev {
        color: var(--primary-color);
        background-color: white;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .swiper-button-next:after, .swiper-button-prev:after {
        font-size: 1.2rem;
        font-weight: bold;
    }

    .swiper-pagination-bullet {
        background-color: var(--primary-color);
        opacity: 0.5;
    }

    .swiper-pagination-bullet-active {
        opacity: 1;
        background-color: var(--primary-color);
        width: 25px;
        border-radius: 5px;
    }

    /* Loading Indicators */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(255,255,255,0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        visibility: hidden;
        opacity: 0;
        transition: all 0.3s ease;
    }

    .loading-overlay.active {
        visibility: visible;
        opacity: 1;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid rgba(52, 152, 219, 0.3);
        border-radius: 50%;
        border-top-color: var(--primary-color);
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        to { transform: rotate(360deg); }
    }

    /* Shimmer effect for loading */
    .shimmer {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: shimmer 1.5s infinite;
    }

    @@keyframes shimmer {
        to { background-position: -200% 0; }
    }

    .business-card.loading .business-img {
        background-image: none !important;
    }

    .business-card.loading h4,
    .business-card.loading .business-description,
    .business-card.loading .business-category,
    .business-card.loading .business-rating {
        color: transparent !important;
        background: #eee;
        border-radius: 4px;
    }

    /* Category Section */
    .categories-section {
        padding: 3rem 0;
    }

    .section-title {
        text-align: center;
        margin-bottom: 2.5rem;
        position: relative;
    }

    .section-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 3px;
        background-color: #3498db;
    }

    .category-card {
        text-align: center;
        padding: 2rem 1rem;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        transition: all 0.3s ease;
        background-color: white;
        margin-bottom: 1.5rem;
        cursor: pointer;
    }

    .category-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    }

    .category-icon {
        font-size: 2.5rem;
        color: #3498db;
        margin-bottom: 1rem;
    }

    .category-card h5 {
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .category-card p {
        color: #6c757d;
        font-size: 0.9rem;
    }

    /* Featured Businesses Section */
    .featured-section {
        padding: 3rem 0;
        background-color: #f8f9fa;
        padding-left: 15px;
        padding-right: 15px;
        max-width: 1320px;
        margin-left: auto;
        margin-right: auto;
    }

    .business-card {
        background: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        transition: all 0.3s ease;
        margin-bottom: 1.5rem;
    }

    .business-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    }

    .business-img {
        height: 200px;
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .business-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #e74c3c;
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .business-content {
        padding: 1.5rem;
    }

    .business-title {
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .business-category {
        color: #3498db;
        font-size: 0.9rem;
        margin-bottom: 0.8rem;
    }

    .business-description {
        color: #6c757d;
        margin-bottom: 1rem;
        font-size: 0.9rem;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .business-features {
        border-top: 1px solid #eee;
        padding-top: 1rem;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .feature-badge {
        background-color: rgba(52, 152, 219, 0.1);
        color: #3498db;
        padding: 0.2rem 0.6rem;
        border-radius: 20px;
        font-size: 0.8rem;
    }

    .business-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 1rem;
    }

    .business-rating {
        color: #f1c40f;
    }

    .business-link {
        background-color: #3498db;
        color: white;
        padding: 0.4rem 1rem;
        border-radius: 5px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .business-link:hover {
        background-color: #2980b9;
        color: white;
    }

    .pagination {
        margin-top: 2rem;
        justify-content: center;
    }

    .page-link {
        color: #3498db;
        border-radius: 5px;
        margin: 0 0.2rem;
    }

    .page-item.active .page-link {
        background-color: #3498db;
        border-color: #3498db;
    }

    /* Enhanced Pagination with Better Loading Indicator */
    .pagination-container {
        position: relative;
        padding: 20px 0;
        min-height: 80px; /* Ensure there's space for the loading indicator */
    }

    .pagination-loader {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10;
        visibility: hidden;
        opacity: 0;
        transition: all 0.3s ease;
        border-radius: 10px;
    }

    .pagination-loader.active {
        visibility: visible;
        opacity: 1;
    }

    .pagination-loader .spinner {
        width: 30px;
        height: 30px;
        border: 3px solid rgba(52, 152, 219, 0.2);
        border-radius: 50%;
        border-top-color: var(--primary-color);
        animation: spin 0.8s linear infinite;
    }

    /* Improved Stats Section */
    .stats-section {
        background-color: #2c3e50;
        color: white;
        padding: 3.5rem 0;
        text-align: center;
        margin-bottom: 0;
        border-radius: 0;
    }

    .stats-container {
        display: flex;
        justify-content: space-around;
        align-items: center;
        flex-wrap: wrap;
        max-width: 1320px;
        margin: 0 auto;
    }

    .stat-item {
        padding: 1.5rem;
        flex: 1;
        min-width: 200px;
        margin: 0.5rem;
        position: relative;
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        color: #3498db;
        margin-bottom: 0.5rem;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        line-height: 1.2;
        display: block;
    }

    .stat-text {
        font-size: 1.1rem;
        opacity: 0.9;
        display: block;
    }

    .stat-item:not(:last-child)::after {
        content: '';
        position: absolute;
        right: 0;
        top: 25%;
        bottom: 25%;
        width: 1px;
        background-color: rgba(255, 255, 255, 0.1);
    }

    @@media (max-width: 768px) {
        .stat-item:not(:last-child)::after {
            display: none;
        }
        
        .stat-item {
            min-width: 150px;
        }
    }

    /* Improved Testimonials with Letter Avatars */
    .testimonial-img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        margin-right: 1rem;
        background-color: var(--primary-color);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1.5rem;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    }

    /* Different colors for different testimonials */
    .testimonial-img.color-1 {
        background-color: #3498db;
    }

    .testimonial-img.color-2 {
        background-color: #e74c3c;
    }

    .testimonial-img.color-3 {
        background-color: #2ecc71;
    }

    /* Enhanced Testimonials Section */
    .testimonials-section {
        padding: 4rem 0;
        background-color: #f8f9fa;
        padding-left: 15px;
        padding-right: 15px;
        max-width: 1320px;
        margin-left: auto;
        margin-right: auto;
    }

    .testimonial-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 8px 20px rgba(0,0,0,0.08);
        margin-bottom: 1.5rem;
        height: 100%;
        transition: all 0.3s ease;
        border: 1px solid rgba(0,0,0,0.03);
    }

    .testimonial-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 30px rgba(0,0,0,0.12);
    }

    .testimonial-content {
        font-style: italic;
        color: #6c757d;
        margin-bottom: 1.5rem;
        position: relative;
        font-size: 1rem;
        line-height: 1.6;
    }

    .testimonial-content::before {
        content: '"';
        position: absolute;
        top: -20px;
        left: -10px;
        font-size: 3.5rem;
        color: rgba(52, 152, 219, 0.2);
        font-family: serif;
    }

    .testimonial-author {
        display: flex;
        align-items: center;
        border-top: 1px solid rgba(0,0,0,0.05);
        padding-top: 1.2rem;
    }

    .testimonial-img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        margin-right: 1rem;
        background-color: var(--primary-color);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1.5rem;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        flex-shrink: 0;
    }

    .testimonial-name {
        font-weight: 700;
        margin-bottom: 0.2rem;
        color: #2c3e50;
    }

    .testimonial-position {
        color: #6c757d;
        font-size: 0.9rem;
    }

    /* Different colors for testimonial avatars */
    .testimonial-img.color-1 {
        background-color: #3498db;
    }

    .testimonial-img.color-2 {
        background-color: #e74c3c;
    }

    .testimonial-img.color-3 {
        background-color: #2ecc71;
    }

    /* Enhanced Call To Action Section */
    .cta-section {
        background: linear-gradient(135deg, #3498db, #2c3e50);
        color: white;
        padding: 5rem 0;
        text-align: center;
        border-radius: 0 100px 0 0;
        position: relative;
        overflow: hidden;
        box-shadow: 0 -5px 25px rgba(0,0,0,0.1);
        margin-bottom: 0;
        border-radius: 0;
    }

    .cta-section::before {
        content: '';
        position: absolute;
        top: -50px;
        right: -50px;
        width: 200px;
        height: 200px;
        border-radius: 50%;
        background: rgba(255,255,255,0.1);
        z-index: 1;
    }

    .cta-section::after {
        content: '';
        position: absolute;
        bottom: -80px;
        left: -80px;
        width: 300px;
        height: 300px;
        border-radius: 50%;
        background: rgba(255,255,255,0.05);
        z-index: 1;
    }

    .cta-title {
        font-size: 2.8rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        position: relative;
        z-index: 2;
        text-shadow: 0 2px 10px rgba(0,0,0,0.2);
    }

    .cta-text {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-bottom: 2.5rem;
        max-width: 700px;
        margin-left: auto;
        margin-right: auto;
        position: relative;
        z-index: 2;
        line-height: 1.6;
    }

    .cta-btn {
        background-color: white;
        color: #3498db;
        border-radius: 50px;
        padding: 1rem 2.5rem;
        font-weight: 600;
        font-size: 1.1rem;
        text-decoration: none;
        transition: all 0.3s ease;
        position: relative;
        z-index: 2;
        display: inline-block;
        box-shadow: 0 5px 15px rgba(0,0,0,0.15);
    }

    .cta-btn:hover {
        background-color: rgba(255,255,255,0.9);
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.25);
        color: #2980b9;
    }

    @@media (max-width: 768px) {
        .cta-section {
            padding: 4rem 1rem;
        }
        
        .cta-title {
            font-size: 2.2rem;
        }
    }
</style>

<!-- Loading Overlay -->
<div class="loading-overlay" id="loadingOverlay">
    <div class="spinner"></div>
</div>

<!-- Hero Section -->
<section class="hero-section full-width-section">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8 mx-auto hero-content text-center">
                <h1>Find the Best Local Businesses</h1>
                <p>Discover top-rated services, read reviews, and connect with businesses in your area</p>
                <form class="hero-search d-flex" action="/Business/Search" method="get" id="heroSearchForm">
                    <input type="text" class="form-control" name="searchTerm" id="heroSearchInput" 
                           placeholder="Search for businesses, services, or categories..." autocomplete="off">
                    <button type="submit" class="btn ms-2">Search</button>
                    <div class="search-suggestions" id="searchSuggestions"></div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Categories Slider Section (Replacing static categories grid) -->
<section class="categories-slider-section">
    <div class="container">
        <h2 class="section-title">Browse by Categories</h2>
        <div class="categories-slider">
            <div class="swiper-container" id="categoriesSwiper">
                <div class="swiper-wrapper">
                    @if (ViewBag.Categories != null)
                    {
                        foreach (var category in ViewBag.Categories)
                        {
                            <div class="swiper-slide">
                                <div class="category-slide" onclick="location.href='/Business/Search?categoryId=@category.Id'">
                                    <div class="category-icon">
                                        <i class="@(string.IsNullOrEmpty(category?.Icon) ? "fas fa-store" : category.Icon)"></i>
                                    </div>
                                    <h5>@(category?.Name ?? "Category")</h5>
                                    @{
                                        var businessCount = ViewBag.CategoryBusinessCounts != null && 
                                            ViewBag.CategoryBusinessCounts.ContainsKey(category.Id) ? 
                                            ViewBag.CategoryBusinessCounts[category.Id] : 0;
                                    }
                                    <p>@businessCount businesses</p>
                                </div>
                            </div>
                        }
                    }
                </div>
                <!-- Add pagination and navigation -->
                <div class="swiper-pagination"></div>
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
            </div>
        </div>
    </div>
</section>

<!-- Featured Businesses Section -->
<section class="featured-section">
    <div class="container">
        <h2 class="section-title">Premium Businesses</h2>
        
        <div class="row" id="businessesContainer">
            @if (Model != null && Model.Any())
            {
                foreach (var business in Model)
                {
                    <div class="col-lg-4 col-md-6">
                        <div class="business-card">
                            <div class="business-img" style="background-image: url('@(string.IsNullOrEmpty(business?.MainImage) ? "/images/default-business.jpg" : business.MainImage)')">
                                @if (business?.PackageId > 2)
                                {
                                    <div class="business-badge">Featured</div>
                                }
                            </div>
                            <div class="business-content">
                                <h4 class="business-title">@(business?.Name ?? "Business")</h4>
                                <div class="business-category">
                                    <i class="@(string.IsNullOrEmpty(business?.Category?.Icon) ? "fas fa-tag" : business.Category.Icon) me-1"></i>
                                    @(business?.Category?.Name ?? "General")
                                </div>
                                <p class="business-description">@(business?.Description ?? "No description available")</p>
                                @if (business?.BusinessFeatures != null && business.BusinessFeatures.Any())
                                {
                                    <div class="business-features">
                                        @foreach (var feature in business.BusinessFeatures.Take(3))
                                        {
                                            <span class="feature-badge">@feature.Name</span>
                                        }
                                        @if (business.BusinessFeatures.Count > 3)
                                        {
                                            <span class="feature-badge">+@(business.BusinessFeatures.Count - 3) more</span>
                                        }
                                    </div>
                                }
                                <div class="business-footer">
                                    <div class="business-rating">
                                        @{
                                            var rating = business?.Reviews != null && business.Reviews.Any() ? 
                                                business.Reviews.Average(r => r.Rating) : 0;
                                            for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Round(rating))
                                                {
                                                    <i class="fas fa-star"></i>
                                                }
                                                else if (i - 0.5 <= rating)
                                                {
                                                    <i class="fas fa-star-half-alt"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star"></i>
                                                }
                                            }
                                        }
                                        <span class="ms-1">(@(business?.Reviews?.Count ?? 0))</span>
                                    </div>
                                    <a href="/Business/GetBusinessById?id=@business?.Id" class="business-link">View Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12 text-center">
                    <p>No premium businesses available</p>
                </div>
            }
        </div>
        
        <!-- Enhanced Pagination -->
        <div class="pagination-container">
            <div class="pagination-loader" id="paginationLoader">
                <div class="spinner"></div>
            </div>
            <nav aria-label="Businesses pagination">
                <ul class="pagination" id="businessPagination">
                    @if (ViewBag.TotalPages != null && ViewBag.TotalPages > 0)
                    {
                        <!-- Previous page button -->
                        <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
                            <a class="page-link" href="javascript:void(0)" data-page="@(ViewBag.CurrentPage - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        
                            int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                            int endPage = Math.Min(ViewBag.TotalPages, startPage + 4);
                            
                            @if (startPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="javascript:void(0)" data-page="1">1</a>
                                </li>
                                
                                if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <a class="page-link" href="javascript:void(0)">...</a>
                                    </li>
                                }
                            }
                            
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="javascript:void(0)" data-page="@i">@i</a>
                                </li>
                            }
                            
                            @if (endPage < ViewBag.TotalPages)
                            {
                                if (endPage < ViewBag.TotalPages - 1)
                                {
                                    <li class="page-item disabled">
                                        <a class="page-link" href="javascript:void(0)">...</a>
                                    </li>
                                }
                                
                                <li class="page-item">
                                    <a class="page-link" href="javascript:void(0)" data-page="@ViewBag.TotalPages">@ViewBag.TotalPages</a>
                                </li>
                            }
                       
                        
                       
                        <li class="page-item @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="javascript:void(0)" data-page="@(ViewBag.CurrentPage + 1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</section>

<!-- Improved Stats Section with fixed layout -->
<section class="stats-section full-width-section">
    <div class="container">
        <div class="stats-container">
            <div class="stat-item">
                <span class="stat-number" id="businessCount">500+</span>
                <span class="stat-text">Businesses</span>
            </div>
            <div class="stat-item">
                <span class="stat-number" id="userCount">10k+</span>
                <span class="stat-text">Happy Users</span>
            </div>
            <div class="stat-item">
                <span class="stat-number" id="reviewCount">2.5k+</span>
                <span class="stat-text">Reviews</span>
            </div>
            <div class="stat-item">
                <span class="stat-number" id="cityCount">50+</span>
                <span class="stat-text">Cities</span>
            </div>
        </div>
    </div>
</section>

<!-- Enhanced Testimonials Section -->
<section class="testimonials-section">
    <div class="container">
        <h2 class="section-title">What Our Users Say</h2>
        
        <div class="row">
            <div class="col-md-4">
                <div class="testimonial-card">
                    <div class="testimonial-content">
                        This platform has completely transformed how I find local services. The reviews are honest and businesses are responsive.
                    </div>
                    <div class="testimonial-author">
                        <div class="testimonial-img color-1">S</div>
                        <div>
                            <div class="testimonial-name">Sarah Johnson</div>
                            <div class="testimonial-position">Regular User</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="testimonial-card">
                    <div class="testimonial-content">
                        As a small business owner, this directory has been a game changer for my visibility. I've seen a 40% increase in new customers!
                    </div>
                    <div class="testimonial-author">
                        <div class="testimonial-img color-2">M</div>
                        <div>
                            <div class="testimonial-name">Michael Smith</div>
                            <div class="testimonial-position">Business Owner</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="testimonial-card">
                    <div class="testimonial-content">
                        The detailed business profiles and customer reviews helped me find exactly what I was looking for. Highly recommended!
                    </div>
                    <div class="testimonial-author">
                        <div class="testimonial-img color-3">E</div>
                        <div>
                            <div class="testimonial-name">Emily Davis</div>
                            <div class="testimonial-position">New User</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Enhanced Call To Action Section -->
<section class="cta-section full-width-section">
    <div class="container">
        <h2 class="cta-title">Ready to Grow Your Business?</h2>
        <p class="cta-text">List your business in our directory and reach thousands of potential customers. Choose from flexible packages to boost your visibility.</p>
        <a href="/Business/Add" class="cta-btn">Add Your Business</a>
    </div>
</section>

@section Scripts {
    <!-- Include Swiper.js for the category slider -->
    <link rel="stylesheet" href="https://unpkg.com/swiper@8/swiper-bundle.min.css" />
    <script src="https://unpkg.com/swiper@8/swiper-bundle.min.js"></script>
    
    <script>
        // Initialize the Category Slider
        document.addEventListener('DOMContentLoaded', function() {
            const swiper = new Swiper('#categoriesSwiper', {
                slidesPerView: 1,
                spaceBetween: 20,
                loop: false,
                grabCursor: true,
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true,
                },
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                breakpoints: {
                    640: {
                        slidesPerView: 2,
                    },
                    768: {
                        slidesPerView: 3,
                    },
                    1024: {
                        slidesPerView: 4,
                    },
                },
                autoplay: {
                    delay: 5000,
                },
            });
            
            // Search Suggestions Functionality
            const searchInput = document.getElementById('heroSearchInput');
            const suggestionsContainer = document.getElementById('searchSuggestions');
            let typingTimer;
            
            searchInput.addEventListener('input', function() {
                clearTimeout(typingTimer);
                
                if (this.value.length < 2) {
                    suggestionsContainer.style.display = 'none';
                    return;
                }
                
                typingTimer = setTimeout(() => {
                    fetchSuggestions(this.value);
                }, 300); // Reduced timeout for better responsiveness
            });
            
            searchInput.addEventListener('focus', function() {
                if (this.value.length >= 2) {
                    suggestionsContainer.style.display = 'block';
                }
            });
            
            // Hide suggestions when clicking outside
            document.addEventListener('click', function(e) {
                if (!searchInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
                    suggestionsContainer.style.display = 'none';
                }
            });
            
            function fetchSuggestions(query) {
                fetch(`/Home/SearchSuggestions?query=${encodeURIComponent(query)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.length > 0) {
                            renderSuggestions(data);
                            suggestionsContainer.style.display = 'block';
                        } else {
                            suggestionsContainer.style.display = 'none';
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching suggestions:', error);
                        suggestionsContainer.style.display = 'none';
                    });
            }
            
            function renderSuggestions(suggestions) {
                suggestionsContainer.innerHTML = '';
                
                suggestions.forEach(suggestion => {
                    const item = document.createElement('div');
                    item.className = 'suggestion-item';
                    
                    // Check if it's a category or feature suggestion
                    let iconClass = 'fas fa-search';
                    let categoryText = '';
                    
                    if (suggestion.text.includes('(Category)')) {
                        iconClass = 'fas fa-tag';
                        categoryText = '<span class="suggestion-category">Category</span>';
                    } else if (suggestion.text.includes('(Feature)')) {
                        iconClass = 'fas fa-check-circle';
                        categoryText = '<span class="suggestion-category">Feature</span>';
                    }
                    
                    // Clean up the text by removing the (Category) or (Feature) part
                    let displayText = suggestion.text.replace(/ \(Category\)| \(Feature\)/g, '');
                    
                    item.innerHTML = `
                        <span class="suggestion-icon"><i class="${iconClass}"></i></span>
                        <span class="suggestion-text">${displayText}</span>
                        ${categoryText}
                    `;
                    
                    item.addEventListener('click', function() {
                        searchInput.value = displayText;
                        suggestionsContainer.style.display = 'none';
                        document.getElementById('heroSearchForm').submit();
                    });
                    
                    suggestionsContainer.appendChild(item);
                });
            }
            
            // Pagination with Loading Indicator
            const loadingOverlay = document.getElementById('loadingOverlay');
            const businessesContainer = document.getElementById('businessesContainer');
            const pagination = document.getElementById('businessPagination');
            const paginationLoader = document.getElementById('paginationLoader');
            
            pagination.addEventListener('click', function(e) {
                const pageLink = e.target.closest('.page-link');
                if (pageLink && !pageLink.parentElement.classList.contains('disabled')) {
                    e.preventDefault();
                    const pageNumber = pageLink.getAttribute('data-page');
                    loadSponsoredBusinesses(pageNumber);
                }
            });
            
            function loadSponsoredBusinesses(page) {
                // Show loading indicator only in the pagination area
                paginationLoader.classList.add('active');
                
                // Also apply loading effect to business cards
                const businessCards = document.querySelectorAll('.business-card');
                businessCards.forEach(card => {
                    card.style.opacity = '0.6';
                });
                
                // Fetch data
                fetch(`/Home/SponsoredBusinesses?page=${page}`, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.text())
                .then(html => {
                    // Short timeout for better user experience
                    setTimeout(() => {
                        // Update the businesses content
                        businessesContainer.innerHTML = html;
                        
                        // Update pagination UI
                        updatePaginationUI(page);
                        
                        // Hide the loader
                        paginationLoader.classList.remove('active');
                        
                        // Restore opacity to business cards
                        businessCards.forEach(card => {
                            card.style.opacity = '1';
                        });
                        
                        // Smooth scroll to the top of the business section
                        const featuredSection = document.querySelector('.featured-section');
                        if (featuredSection) {
                            window.scrollTo({
                                top: featuredSection.offsetTop - 80, // Account for the header
                                behavior: 'smooth'
                            });
                        }
                    }, 500);
                })
                .catch(error => {
                    console.error('Error loading businesses:', error);
                    paginationLoader.classList.remove('active');
                    businessCards.forEach(card => {
                        card.style.opacity = '1';
                    });
                });
            }
            
            function updatePaginationUI(currentPage) {
                currentPage = parseInt(currentPage);
                const totalPages = @(ViewBag.TotalPages ?? 1);
                
                // Update the active state
                document.querySelectorAll('#businessPagination .page-item').forEach(item => {
                    item.classList.remove('active');
                    
                    // Find the page number link
                    const pageLink = item.querySelector('.page-link');
                    if (pageLink && pageLink.getAttribute('data-page') == currentPage) {
                        item.classList.add('active');
                    }
                });
                
                // Update previous/next buttons
                const prevButton = document.querySelector('#businessPagination .page-item:first-child');
                const nextButton = document.querySelector('#businessPagination .page-item:last-child');
                
                if (prevButton) {
                    if (currentPage <= 1) {
                        prevButton.classList.add('disabled');
                    } else {
                        prevButton.classList.remove('disabled');
                        prevButton.querySelector('.page-link').setAttribute('data-page', currentPage - 1);
                    }
                }
                
                if (nextButton) {
                    if (currentPage >= totalPages) {
                        nextButton.classList.add('disabled');
                    } else {
                        nextButton.classList.remove('disabled');
                        nextButton.querySelector('.page-link').setAttribute('data-page', currentPage + 1);
                    }
                }
            }
            
            // Stats counter animation
            const counterAnimation = () => {
                const counters = document.querySelectorAll('.stat-number');
                counters.forEach(counter => {
                    const targetValue = parseInt(counter.textContent);
                    const increment = targetValue / 100;
                    let currentValue = 0;
                    
                    const updateCounter = () => {
                        if (currentValue < targetValue) {
                            currentValue += increment;
                            counter.textContent = Math.floor(currentValue) + '+';
                            setTimeout(updateCounter, 10);
                        } else {
                            counter.textContent = targetValue + '+';
                        }
                    };
                    
                    updateCounter();
                });
            };
            
            // Observer for stats animation
            const observer = new IntersectionObserver(entries => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        counterAnimation();
                        observer.unobserve(entry.target);
                    }
                });
            }, { threshold: 0.5 });
            
            const statsSection = document.querySelector('.stats-section');
            if (statsSection) {
                observer.observe(statsSection);
            }
        });
    </script>
}