@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<div class="error-container">
    <div class="error-content">
        <i class="fas fa-exclamation-triangle error-icon"></i>
        <h1 class="error-title">Oops! Something went wrong</h1>
        <p class="error-message">We apologize for the inconvenience. Please try again later or contact our support team if the problem persists.</p>
        
        @if (Model?.ShowRequestId ?? false)
        {
            <p class="error-details">
                <strong>Request ID:</strong> <code>@Model.RequestId</code>
            </p>
        }
        
        <div class="action-buttons">
            <a href="/" class="btn btn-primary btn-lg">
                <i class="fas fa-home me-2"></i>Return to Home
            </a>
            <button onclick="goBack()" class="btn btn-outline-secondary btn-lg ms-3">
                <i class="fas fa-arrow-left me-2"></i>Go Back
            </button>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .error-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 80vh;
            text-align: center;
            padding: 2rem;
        }

        .error-content {
            max-width: 650px;
            animation: fadeIn 0.8s ease-in-out;
        }

        .error-icon {
            font-size: 5rem;
            color: #f39c12;
            margin-bottom: 1.5rem;
            display: inline-block;
            animation: pulse 2s infinite;
        }

        .error-title {
            font-size: 2.5rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: #333;
        }

        .error-message {
            font-size: 1.2rem;
            color: #6c757d;
            margin-bottom: 1.5rem;
            line-height: 1.6;
        }
        
        .error-details {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 2.5rem;
            background-color: #f8f9fa;
            padding: 1rem;
            border-radius: 0.5rem;
            display: inline-block;
        }

        .action-buttons {
            margin-bottom: 2rem;
        }

        .btn-lg {
            padding: 0.8rem 2rem;
            font-weight: 500;
            border-radius: 50px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .btn-lg:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        }

        .btn-outline-secondary {
            border-width: 2px;
        }

        @@keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }
            50% {
                transform: scale(1.1);
                opacity: 0.8;
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .error-icon {
                font-size: 4rem;
            }
            
            .error-title {
                font-size: 2rem;
            }
            
            .error-message {
                font-size: 1rem;
            }
            
            .action-buttons {
                display: flex;
                flex-direction: column;
                gap: 1rem;
            }
            
            .btn-lg {
                width: 100%;
                margin-left: 0 !important;
            }
        }
    </style>
}

@section Scripts {
    
        function goBack() {
            window.history.back();
        }
    
}
