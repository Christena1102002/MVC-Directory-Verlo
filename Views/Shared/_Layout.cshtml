@using Microsoft.AspNetCore.Identity
@inject SignInManager<mvc.Models.Authorize.ApplicationUser> SignInManager
@inject UserManager<mvc.Models.Authorize.ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Vyrlo</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/fullwidth-sections.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    @await RenderSectionAsync("Styles", required: false)
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --accent-color: #e74c3c;
            --light-bg: #f8f9fa;
            --dark-bg: #343a40;
            --text-light: #f8f9fa;
            --text-dark: #212529;
            --success-color: #2ecc71;
            --warning-color: #f1c40f;
        }

        body {
            font-family: 'Poppins', sans-serif;
            padding-top: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            background-color: #f8f9fa;
        }

        main {
            flex: 1;
        }

        /* Modern Header Styles - Improved Alignment */
        .navbar {
            background-color: #fff;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 0.8rem 1rem;
            transition: all 0.3s ease;
        }

        .navbar-brand {
            font-weight: 700;
            color: var(--primary-color);
            font-size: 1.5rem;
        }

        .navbar-nav {
            display: flex;
            align-items: center;
        }

        .navbar-nav .nav-item {
            display: flex;
            align-items: center;
        }

        .navbar-nav .nav-link {
            color: var(--secondary-color);
            font-weight: 500;
            padding: 0.5rem 1rem;
            margin: 0 0.2rem;
            border-radius: 5px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            height: 42px; /* Ensures consistent height */
        }

        /* Improved search form styling */
        .search-form {
            position: relative;
            margin-right: 1rem;
            flex: 1;
            max-width: 500px;
        }

        .search-form input {
            border-radius: 30px;
            padding-left: 2.8rem; /* Increased to make space for icon */
            border: 1px solid #e0e0e0;
            transition: all 0.3s ease;
            height: 42px; /* Set fixed height for consistency */
        }

        .search-form .search-icon {
            position: absolute;
            left: 15px; /* Moved to the left for better positioning */
            top: 50%;
            transform: translateY(-50%);
            color: #aaa;
            font-size: 0.95rem;
            z-index: 2; /* Ensure it's above the input */
            pointer-events: none; /* Prevents icon from interfering with input */
        }

        /* Improved search suggestions with better contrast */
        .search-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background-color: white;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 10px 20px rgba(0,0,0,0.15);
            margin-top: 5px;
            z-index: 1000;
            max-height: 300px;
            overflow-y: auto;
            display: none;
            border: 1px solid #e0e0e0;
        }

        .suggestion-item {
            padding: 0.8rem 1.5rem;
            border-bottom: 1px solid #eaeaea;
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
        }

        .suggestion-item:last-child {
            border-bottom: none;
        }

        .suggestion-item:hover {
            background-color: #f0f7fc;
        }

        .suggestion-item:nth-child(odd) {
            background-color: #f8f9fa;
        }

        .suggestion-item:nth-child(odd):hover {
            background-color: #f0f7fc;
        }

        .suggestion-icon {
            margin-right: 10px;
            color: var(--primary-color);
            font-size: 0.9rem;
            width: 24px;
            height: 24px;
            background-color: rgba(52, 152, 219, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .suggestion-text {
            font-weight: 500;
            color: #2c3e50;
        }

        .suggestion-category {
            margin-left: auto;
            font-size: 0.8rem;
            color: #7f8c8d;
            background-color: #f5f5f5;
            padding: 0.2rem 0.5rem;
            border-radius: 3px;
        }

        /* User Menu Styling - Improved alignment */
        .right-nav-items {
            display: flex;
            align-items: center;
        }

        .user-menu .dropdown-toggle {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            border: none;
            background: transparent;
            position: relative;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 1.1rem;
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .user-menu:hover .user-avatar {
            transform: scale(1.05);
            box-shadow: 0 5px 12px rgba(0, 0, 0, 0.3);
        }

        .dropdown-menu-end {
            right: 0;
            left: auto;
        }

        .user-menu .dropdown-item {
            display: flex;
            align-items: center;
            padding: 0.7rem 1.5rem;
            font-size: 0.95rem;
        }

        .user-menu .dropdown-item i {
            margin-right: 10px;
            width: 18px;
            text-align: center;
            color: var(--primary-color);
        }

        .user-menu .dropdown-item:hover {
            background-color: rgba(52, 152, 219, 0.1);
        }

        .dropdown-divider {
            margin: 0.5rem 0;
        }

        /* Notification Bell - Aligned with other elements */
        .notification-bell {
            position: relative;
            padding: 0;
            cursor: pointer;
            margin-right: 1rem;
            height: 42px;
            width: 42px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .notification-badge {
            position: absolute;
            top: 3px;
            right: 3px;
            background-color: var(--accent-color);
            color: white;
            border-radius: 50%;
            min-width: 18px;
            height: 18px;
            font-size: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0 4px;
        }

        .notification-dropdown {
            width: 320px;
            padding: 0;
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-header {
            padding: 1rem;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .notification-title {
            font-weight: 600;
            font-size: 1rem;
            color: var(--secondary-color);
            margin: 0;
        }

        .mark-read {
            font-size: 0.8rem;
            color: var(--primary-color);
            cursor: pointer;
            text-decoration: none;
        }

        .notification-items {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .notification-item {
            padding: 0.8rem 1rem;
            border-bottom: 1px solid #f5f5f5;
            display: flex;
            align-items: flex-start;
            transition: all 0.2s ease;
        }

        .notification-item:hover {
            background-color: rgba(52, 152, 219, 0.05);
        }

        .notification-item.unread {
            background-color: rgba(52, 152, 219, 0.08);
        }

        .notification-icon {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: rgba(52, 152, 219, 0.1);
            color: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 0.8rem;
            flex-shrink: 0;
        }

        .notification-content {
            flex: 1;
        }

        .notification-message {
            font-size: 0.9rem;
            color: var(--secondary-color);
            margin-bottom: 0.3rem;
        }

        .notification-time {
            font-size: 0.75rem;
            color: #6c757d;
        }

        .notification-footer {
            padding: 0.8rem;
            text-align: center;
            border-top: 1px solid #eee;
        }

        .notification-footer a {
            color: var(--primary-color);
            font-size: 0.9rem;
            text-decoration: none;
        }

        /* Footer Styles */
        footer {
            background-color: var(--secondary-color);
            color: var(--text-light);
            padding: 3rem 0 1rem;
         
        }

        .footer-title {
            color: var(--primary-color);
            font-weight: 600;
            margin-bottom: 1.2rem;
            font-size: 1.2rem;
        }

        .footer-links {
            list-style: none;
            padding: 0;
        }

        .footer-links li {
            margin-bottom: 0.8rem;
        }

        .footer-links a {
            color: #ddd;
            text-decoration: none;
            transition: all 0.3s ease;
            display: inline-block;
        }

        .footer-links a:hover {
            color: var(--primary-color);
            transform: translateX(5px);
        }

        .footer-links a i {
            margin-right: 8px;
        }

        .social-icons {
            margin-top: 1rem;
        }

        .social-icons a {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: rgba(255,255,255,0.1);
            color: #fff;
            margin-right: 0.5rem;
            transition: all 0.3s ease;
        }

        .social-icons a:hover {
            background-color: var (--primary-color);
            transform: translateY(-3px);
        }

        .footer-bottom {
            border-top: 1px solid rgba(255,255,255,0.1);
            padding-top: 1.5rem;
            margin-top: 2rem;
            text-align: center;
            font-size: 0.9rem;
            color: rgba(255,255,255,0.6);
        }

        .footer-bottom a {
            color: var(--primary-color);
            text-decoration: none;
        }

        /* Mobile responsiveness */
        @@media (max-width: 768px) {
            .navbar {
                padding: 0.5rem;
            }
            
            .navbar-brand {
                font-size: 1.3rem;
            }
            
            .search-form {
                margin: 0.5rem 0;
                width: 100%;
            }
            
            .footer-column {
                margin-bottom: 2rem;
            }
        }

        /* Responsive adjustments */
        @@media (max-width: 992px) {
            .navbar-collapse {
                padding-top: 1rem;
            }
            
            .navbar-nav {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .right-nav-items {
                flex-direction: row;
                width: 100%;
                justify-content: space-between;
                margin-top: 1rem;
                padding-top: 1rem;
                border-top: 1px solid #eee;
            }
            
            .search-form {
                width: 100%;
                margin: 0.5rem 0;
            }
            
            .notification-dropdown {
                width: 290px;
            }
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.17/signalr.min.js"></script>

    <script src="~/js/signalr-cdn.js" asp-append-version="true"></script>
</head>
<body class="@(User.IsInRole("Admin") ? "role-admin" : "")">
    <!-- Modern Header with Improved Alignment -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-light">
            <div class="container">
                <a class="navbar-brand" href="/">
                    <i class="fas fa-building me-2"></i>Vyrlo
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" 
                        aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                
                <div class="collapse navbar-collapse" id="navbarContent">
                    <form class="search-form d-flex mx-lg-auto" action="/Business/Search" method="get" id="headerSearchForm">
                        <i class="fas fa-search search-icon"></i>
                        <input class="form-control me-2" type="search" name="searchTerm" id="headerSearchInput"
                               placeholder="Search businesses, categories..." aria-label="Search" autocomplete="off">
                        <div class="search-suggestions" id="headerSearchSuggestions"></div>
                    </form>
                    
                    <ul class="navbar-nav ms-lg-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Home" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")" 
                               href="/">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Business" && ViewContext.RouteData.Values["action"].ToString() == "Search" ? "active" : "")" 
                               href="/Business/Search">Businesses</a>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Business" && ViewContext.RouteData.Values["action"].ToString() == "GetBusinessByUserId" ? "active" : "")" 
                                   href="/Business/GetBusinessByUserId?id=@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value">
                                    <i class="fas fa-briefcase me-1"></i> My Businesses
                                </a>
                            </li>
                            
                            <div class="right-nav-items">
                                <!-- Notification Bell -->
                                <partial name="_NotificationsPartial" />
                                
                                <!-- Chat Notifications -->
                                <partial name="_NotificationsChatPartial" />
                                
                                <!-- User Avatar and Dropdown -->
                                <li class="nav-item user-menu dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="userDropdown" 
                                       role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <div class="user-avatar">
                                            @(User.Identity.Name?.Substring(0, 1).ToUpper())
                                        </div>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                        @if (User.IsInRole("Admin"))
                                        {
                                         
                                             
                                                    <li><a class="dropdown-item" href="/Dashboard"><i class="fas fa-tachometer-alt me-2"></i>Dashboard</a></li>
                                                    <li><a class="dropdown-item" href="@Url.Action("GetAll", "BusinessAdmin")"><i class="fas fa-store me-2"></i>Businesses</a></li>
                                                    <li><a class="dropdown-item" href="@Url.Action("Index", "CategoryAdmin")"><i class="fas fa-folder me-2"></i>Categories</a></li>
                                                    <li><a class="dropdown-item" href="@Url.Action("GetAll", "Package")"><i class="fas fa-box me-2"></i>Packages</a></li>
                                                    <li><a class="dropdown-item" href="#"><i class="fas fa-users me-2"></i>Users</a></li>
                                                    <li><a class="dropdown-item" href="@Url.Action("Index", "AdminChat")"><i class="fas fa-comments me-2"></i>Support Chat</a></li>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li><a class="dropdown-item" href="#"><i class="fas fa-star me-2"></i>Reviews</a></li>
                                                    <li><a class="dropdown-item" href="#"><i class="fas fa-chart-bar me-2"></i>Reports</a></li>
                                                    <li><a class="dropdown-item" href="#"><i class="fas fa-cog me-2"></i>Settings</a></li>
                                                
                                           
                                        }
                                        else
                                        {
                                            <li><a class="dropdown-item" href="/Support/UserChat"><i class="fas fa-life-ring"></i> Support Center</a></li>
                                            <li><a class="dropdown-item" href="/Business/Add"><i class="fas fa-plus-circle"></i> Add Business</a></li>
                                            <li><a class="dropdown-item" href="/Payment"><i class="fas fa-credit-card"></i> Payment</a></li>
                                            <li><a class="dropdown-item" href="/Package"><i class="fas fa-tag"></i> Prices</a></li>
                                        }
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="/Account/Logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                                    </ul>
                                </li>
                            </div>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Register">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main role="main">
        @if (TempData["Success"] != null)
        {
            <div class="container py-4">
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
        
        @if (TempData["Error"] != null)
        {
            <div class="container py-4">
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
        
        @RenderBody()
    </main>

    <!-- Modern Footer -->
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-4 footer-column">
                    <h4 class="footer-title">About Us</h4>
                    <p>Vyrlo is a leading platform connecting customers with local businesses. Discover, review, and engage with businesses in your area.</p>
                    <div class="social-icons">
                        <a href="#"><i class="fab fa-facebook-f"></i></a>
                        <a href="#"><i class="fab fa-twitter"></i></a>
                        <a href="#"><i class="fab fa-instagram"></i></a>
                        <a href="#"><i class="fab fa-linkedin-in"></i></a>
                    </div>
                </div>
                
                <div class="col-md-4 footer-column">
                    <h4 class="footer-title">Useful Links</h4>
                    <ul class="footer-links">
                        <li><a href="/"><i class="fas fa-chevron-right"></i> Home</a></li>
                        <li><a href="/Business/GetAll"><i class="fas fa-chevron-right"></i> All Businesses</a></li>
                        <li><a href="/Category"><i class="fas fa-chevron-right"></i> Categories</a></li>
                        <li><a href="#"><i class="fas fa-chevron-right"></i> Privacy Policy</a></li>
                        <li><a href="#"><i class="fas fa-chevron-right"></i> Terms of Service</a></li>
                    </ul>
                </div>
                
                <div class="col-md-4 footer-column">
                    <h4 class="footer-title">Contact Us</h4>
                    <ul class="footer-links">
                        <li><i class="fas fa-map-marker-alt me-2"></i> 123 Business Avenue, City, Country</li>
                        <li><i class="fas fa-phone-alt me-2"></i> +123 456 7890</li>
                        <li><i class="fas fa-envelope me-2"></i> info@businessdirectory.com</li>
                    </ul>
                    
                    <div class="mt-3">
                        <h5 class="mb-2" style="font-size: 1rem; color: #ddd;">Newsletter</h5>
                        <div class="input-group">
                            <input type="email" class="form-control" placeholder="Your email">
                            <button class="btn btn-primary" type="button">Subscribe</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="footer-bottom">
                <p>&copy; @DateTime.Now.Year Vyrlo. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <!-- Load SignalR from CDN with fallback -->
    <script src="~/js/signalr-cdn.js" asp-append-version="true"></script>
    <script src="~/js/chat-notifications.js" asp-append-version="true"></script>
    
    <script>
        // Header scroll effect
        window.addEventListener('scroll', function() {
            const header = document.querySelector('.navbar');
            if (window.scrollY > 50) {
                header.style.padding = '0.5rem 1rem';
                header.style.boxShadow = '0 4px 10px rgba(0,0,0,0.1)';
            } else {
                header.style.padding = '0.8rem 1rem';
                header.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';
            }
        });
        
        // Search Suggestions in Header - Improved with better contrast
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('headerSearchInput');
            const suggestionsContainer = document.getElementById('headerSearchSuggestions');
            let typingTimer;
            
            if (searchInput && suggestionsContainer) {
                searchInput.addEventListener('input', function() {
                    clearTimeout(typingTimer);
                    
                    if (this.value.length < 2) {
                        suggestionsContainer.style.display = 'none';
                        return;
                    }
                    
                    typingTimer = setTimeout(() => {
                        fetchSuggestions(this.value);
                    }, 300); // Reduced timeout for better responsiveness
                });
                
                searchInput.addEventListener('focus', function() {
                    if (this.value.length >= 2) {
                        suggestionsContainer.style.display = 'block';
                    }
                });
                
                // Hide suggestions when clicking outside
                document.addEventListener('click', function(e) {
                    if (!searchInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
                        suggestionsContainer.style.display = 'none';
                    }
                });
                
                function fetchSuggestions(query) {
                    fetch(`/Home/SearchSuggestions?query=${encodeURIComponent(query)}`)
                        .then(response => response.json())
                        .then(data => {
                            if (data.length > 0) {
                                renderSuggestions(data);
                                suggestionsContainer.style.display = 'block';
                            } else {
                                suggestionsContainer.style.display = 'none';
                            }
                        })
                        .catch(error => {
                            console.error('Error fetching suggestions:', error);
                            suggestionsContainer.style.display = 'none';
                        });
                }
                
                function renderSuggestions(suggestions) {
                    suggestionsContainer.innerHTML = '';
                    
                    suggestions.forEach(suggestion => {
                        const item = document.createElement('div');
                        item.className = 'suggestion-item';
                        
                        // Check if it's a category or feature suggestion
                        let iconClass = 'fas fa-search';
                        let categoryText = '';
                        
                        if (suggestion.text.includes('(Category)')) {
                            iconClass = 'fas fa-tag';
                            categoryText = '<span class="suggestion-category">Category</span>';
                        } else if (suggestion.text.includes('(Feature)')) {
                            iconClass = 'fas fa-check-circle';
                            categoryText = '<span class="suggestion-category">Feature</span>';
                        }
                        
                        // Clean up the text by removing the (Category) or (Feature) part
                        let displayText = suggestion.text.replace(/ \(Category\)| \(Feature\)/g, '');
                        
                        item.innerHTML = `
                            <span class="suggestion-icon"><i class="${iconClass}"></i></span>
                            <span class="suggestion-text">${displayText}</span>
                            ${categoryText}
                        `;
                        
                        item.addEventListener('click', function() {
                            searchInput.value = displayText;
                            suggestionsContainer.style.display = 'none';
                            document.getElementById('headerSearchForm').submit();
                        });
                        
                        suggestionsContainer.appendChild(item);
                    });
                }
            }
            
            // Toggle read/unread notifications
            const notificationItems = document.querySelectorAll('.notification-item');
            notificationItems.forEach(item => {
                item.addEventListener('click', function() {
                    this.classList.remove('unread');
                    
                    // Update notification count
                    updateNotificationCount();
                });
            });
            
            // Mark all as read
            const markReadBtn = document.querySelector('.mark-read');
            if (markReadBtn) {
                markReadBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    notificationItems.forEach(item => {
                        item.classList.remove('unread');
                    });
                    
                    // Update notification count
                    updateNotificationCount();
                });
            }
            
            function updateNotificationCount() {
                const unreadCount = document.querySelectorAll('.notification-item.unread').length;
                const badge = document.querySelector('.notification-badge');
                
                if (unreadCount > 0) {
                    badge.textContent = unreadCount;
                    badge.style.display = 'flex';
                } else {
                    badge.style.display = 'none';
                }
            }
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
