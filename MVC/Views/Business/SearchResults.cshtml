@model List<mvc.Models.Business>
@{
    ViewData["Title"] = "Search Results";
    var searchTerm = ViewBag.SearchTerm ?? "";
}

<style>
    .search-header {
        background: linear-gradient(rgba(44, 62, 80, 0.85), rgba(44, 62, 80, 0.85)), 
                    url('/images/search-bg.jpg') center/cover no-repeat;
        color: white;
        padding: 3rem 0;
        margin-bottom: 2rem;
    }

    .search-title {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
    }

    .search-form {
        max-width: 700px;
        margin: 0 auto;
        position: relative;
    }

    .search-input {
        height: 55px;
        border-radius: 50px;
        padding-left: 50px;
        padding-right: 130px;
        font-size: 1.1rem;
        border: none;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .search-input:focus {
        box-shadow: 0 5px 20px rgba(0,0,0,0.2);
    }

    .search-icon {
        position: absolute;
        left: 20px;
        top: 50%;
        transform: translateY(-50%);
        color: #aaa;
        font-size: 1.2rem;
    }

    .search-button {
        position: absolute;
        right: 5px;
        top: 5px;
        height: 45px;
        border-radius: 50px;
        background-color: #3498db;
        color: white;
        font-weight: 500;
        padding: 0 1.5rem;
        border: none;
        transition: all 0.3s ease;
    }

    .search-button:hover {
        background-color: #2980b9;
    }

    .filter-bar {
        background-color: white;
        padding: 1rem;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        margin-bottom: 2rem;
    }

    .filter-title {
        font-weight: 600;
        margin-bottom: 1rem;
        color: #2c3e50;
    }

    .filter-option {
        margin-right: 1.5rem;
        display: inline-block;
        margin-bottom: 0.5rem;
    }

    .filter-label {
        cursor: pointer;
        display: flex;
        align-items: center;
    }

    .filter-label input {
        margin-right: 0.5rem;
    }

    .result-count {
        margin-bottom: 1.5rem;
        color: #6c757d;
        font-size: 1.1rem;
    }

    .result-count strong {
        color: #2c3e50;
    }

    .sort-options {
        text-align: right;
    }

    .sort-select {
        padding: 0.5rem;
        border-radius: 5px;
        border: 1px solid #ddd;
        color: #2c3e50;
        background-color: white;
    }

    .business-card {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
        overflow: hidden;
        display: flex;
        flex-direction: row;
    }

    .business-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0,0,0,0.1);
    }

    .business-image {
        width: 200px;
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .business-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: #e74c3c;
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .business-content {
        flex: 1;
        padding: 1.5rem;
        position: relative;
    }

    .business-title {
        font-size: 1.4rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: #2c3e50;
    }

    .business-title a {
        color: #2c3e50;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .business-title a:hover {
        color: #3498db;
    }

    .business-category {
        color: #3498db;
        font-size: 0.9rem;
        margin-bottom: 0.8rem;
        display: flex;
        align-items: center;
    }

    .business-category i {
        margin-right: 0.5rem;
    }

    .business-description {
        color: #555;
        margin-bottom: 1rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .business-features {
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 1rem;
        gap: 0.5rem;
    }

    .feature-badge {
        background-color: rgba(52, 152, 219, 0.1);
        color: #3498db;
        padding: 0.2rem 0.6rem;
        border-radius: 20px;
        font-size: 0.8rem;
    }

    .business-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .business-rating {
        display: flex;
        align-items: center;
    }

    .business-rating .stars {
        color: #f1c40f;
        margin-right: 0.5rem;
    }

    .business-location {
        display: flex;
        align-items: center;
    }

    .business-location i {
        margin-right: 0.5rem;
    }

    .business-actions {
        position: absolute;
        right: 1.5rem;
        bottom: 1.5rem;
    }

    .action-btn {
        background-color: #3498db;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .action-btn:hover {
        background-color: #2980b9;
        color: white;
    }

    .empty-results {
        text-align: center;
        padding: 3rem 1rem;
    }

    .empty-results img {
        max-width: 250px;
        margin-bottom: 2rem;
    }

    .empty-results h3 {
        font-weight: 600;
        margin-bottom: 1rem;
        color: #2c3e50;
    }

    .empty-results p {
        color: #6c757d;
        margin-bottom: 1.5rem;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
    }

    .pagination-container {
        margin-top: 2rem;
        display: flex;
        justify-content: center;
    }

    .pagination .page-link {
        color: #3498db;
        border-radius: 5px;
        margin: 0 0.2rem;
    }

    .page-item.active .page-link {
        background-color: #3498db;
        border-color: #3498db;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .business-card {
            flex-direction: column;
        }
        
        .business-image {
            width: 100%;
            height: 150px;
        }
        
        .search-input {
            padding-right: 20px;
        }
        
        .search-button {
            position: static;
            width: 100%;
            margin-top: 1rem;
        }
        
        .search-form {
            display: flex;
            flex-direction: column;
        }
    }
</style>

<!-- Search Header -->
<section class="search-header">
    <div class="container">
        <h1 class="search-title text-center">Search Results</h1>
        
        <form class="search-form" action="/Business/Search" method="get">
            <i class="fas fa-search search-icon"></i>
            <input type="text" name="searchTerm" class="form-control search-input" 
                   placeholder="Search for businesses, services, or categories..." 
                   value="@searchTerm">
            <button type="submit" class="search-button">Search</button>
        </form>
    </div>
</section>

<div class="container">
    <!-- Filter Bar -->
    <div class="filter-bar">
        <div class="row">
            <div class="col-md-8">
                <h4 class="filter-title">Filters</h4>
                <div>
                    <div class="filter-option">
                        <label class="filter-label">
                            <input type="checkbox" name="premium" value="true"> Premium Only
                        </label>
                    </div>
                    <div class="filter-option">
                        <label class="filter-label">
                            <input type="checkbox" name="topRated" value="true"> Top Rated (4+)
                        </label>
                    </div>
                    <div class="filter-option">
                        <label class="filter-label">
                            <input type="checkbox" name="verified" value="true"> Verified
                        </label>
                    </div>
                    <div class="filter-option">
                        <label class="filter-label">
                            <input type="checkbox" name="hasReviews" value="true"> With Reviews
                        </label>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="sort-options">
                    <select class="sort-select" id="sortOption" onchange="sortResults()">
                        <option value="relevance">Sort by: Relevance</option>
                        <option value="rating">Sort by: Rating</option>
                        <option value="newest">Sort by: Newest</option>
                        <option value="name">Sort by: Name (A-Z)</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Count -->
    <div class="result-count">
        Found <strong>@Model.Count</strong> results for <strong>"@searchTerm"</strong>
    </div>

    <!-- Results List -->
    @if (Model.Any())
    {
        <div class="results-list">
            @foreach (var business in Model)
            {
                <div class="business-card">
                    <div class="business-image" style="background-image: url('@(string.IsNullOrEmpty(business.MainImage) ? "/images/default-business.jpg" : business.MainImage)')">
                        @if (business.PackageId > 1)
                        {
                            <div class="business-badge">Premium</div>
                        }
                    </div>
                    <div class="business-content">
                        <h3 class="business-title">
                            <a href="/Business/GetBusinessById?id=@business.Id">@business.Name</a>
                        </h3>
                        <div class="business-category">
                            <i class="@(string.IsNullOrEmpty(business.Category?.Icon) ? "fas fa-tag" : business.Category?.Icon)"></i>
                            @(business.Category?.Name ?? "General")
                        </div>
                        <p class="business-description">@business.Description</p>
                        
                        @if (business.BusinessFeatures?.Any() == true)
                        {
                            <div class="business-features">
                                @foreach (var feature in business.BusinessFeatures.Take(3))
                                {
                                    <span class="feature-badge">@feature.Name</span>
                                }
                                @if (business.BusinessFeatures.Count > 3)
                                {
                                    <span class="feature-badge">+@(business.BusinessFeatures.Count - 3) more</span>
                                }
                            </div>
                        }
                        
                        <div class="business-meta">
                            <div class="business-rating">
                                <div class="stars">
                                    @{
                                        var rating = business.Reviews?.Any() == true ? 
                                            business.Reviews.Average(r => r.Rating) : 0;
                                        for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Round(rating))
                                            {
                                                <i class="fas fa-star"></i>
                                            }
                                            else if (i - 0.5 <= rating)
                                            {
                                                <i class="fas fa-star-half-alt"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-star"></i>
                                            }
                                        }
                                    }
                                </div>
                                <span>(@(business.Reviews?.Count ?? 0) reviews)</span>
                            </div>
                            <div class="business-location">
                                <i class="fas fa-map-marker-alt"></i>
                                <span>@(business.Address?.Length > 30 ? business.Address.Substring(0, 27) + "..." : business.Address)</span>
                            </div>
                        </div>
                        
                        <div class="business-actions">
                            <a href="/Business/GetBusinessById?id=@business.Id" class="action-btn">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
        
        <!-- Pagination -->
        <div class="pagination-container">
            <nav aria-label="Search results pages">
                <ul class="pagination">
                    @for (int i = 1; i <= (ViewBag.TotalPages ?? 1); i++)
                    {
                        <li class="page-item @(i == (ViewBag.CurrentPage ?? 1) ? "active" : "")">
                            <a class="page-link" href="/Business/Search?searchTerm=@searchTerm&pageNumber=@i">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
    else
    {
        <!-- Empty Results -->
        <div class="empty-results">
            <img src="/images/no-results.svg" alt="No results found">
            <h3>No Results Found</h3>
            <p>We couldn't find any businesses matching your search criteria. Please try again with different keywords or browse our categories instead.</p>
            <a href="/Category" class="btn btn-primary">Browse Categories</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Function to handle filters and sorting
        function applyFilters() {
            // Get all filter values
            const premium = document.querySelector('input[name="premium"]').checked;
            const topRated = document.querySelector('input[name="topRated"]').checked;
            const verified = document.querySelector('input[name="verified"]').checked;
            const hasReviews = document.querySelector('input[name="hasReviews"]').checked;
            const sortBy = document.getElementById('sortOption').value;
            
            // Build the query string
            let queryParams = new URLSearchParams(window.location.search);
            
            // Add filter parameters
            queryParams.set('premium', premium);
            queryParams.set('topRated', topRated);
            queryParams.set('verified', verified);
            queryParams.set('hasReviews', hasReviews);
            queryParams.set('sort', sortBy);
            
            // Reset to page 1 when filters change
            queryParams.set('pageNumber', 1);
            
            // Redirect with new filters
            window.location.href = window.location.pathname + '?' + queryParams.toString();
        }
        
        // Set up filter change listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Get filters from URL and set checkboxes
            const params = new URLSearchParams(window.location.search);
            
            if (params.get('premium') === 'true')
                document.querySelector('input[name="premium"]').checked = true;
                
            if (params.get('topRated') === 'true')
                document.querySelector('input[name="topRated"]').checked = true;
                
            if (params.get('verified') === 'true')
                document.querySelector('input[name="verified"]').checked = true;
                
            if (params.get('hasReviews') === 'true')
                document.querySelector('input[name="hasReviews"]').checked = true;
                
            // Set sort option
            if (params.get('sort'))
                document.getElementById('sortOption').value = params.get('sort');
                
            // Add change listeners to all filters
            document.querySelectorAll('.filter-option input').forEach(filter => {
                filter.addEventListener('change', applyFilters);
            });
        });
        
        // Function to handle sorting
        function sortResults() {
            applyFilters();
        }
    </script>
}
