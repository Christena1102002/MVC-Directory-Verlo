@model IEnumerable<mvc.Models.Review>
@{
    ViewData["Title"] = "Review Management";
    Layout = "_DashboardLayout";
}

<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Review Management</h6>
            <div>
                <a href="#" class="btn btn-sm btn-success" id="markAllAsReadBtn">
                    <i class="fas fa-check-double"></i> Mark All as Read
                </a>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="reviewsTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Business</th>
                            <th>Email</th>
                            <th>Rating</th>
                            <th>Comment</th>
                            <th>Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var review in Model)
                        {
                            <tr class="@(!review.IsRead ? "table-warning" : "")">
                                <td>@review.Id</td>
                                <td>
                                    <a href="/Business/GetBusinessById?id=@review.BusinessId">
                                        @(review.Business?.Name ?? $"Business #{review.BusinessId}")
                                    </a>
                                </td>
                                <td>@review.Email</td>
                                <td>
                                    @for (int i = 0; i < review.Rating; i++)
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    @for (int i = review.Rating; i < 5; i++)
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                </td>
                                <td>@review.Comment</td>
                                <td>@review.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    @if (review.IsRead)
                                    {
                                        <span class="badge badge-success">Read</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-warning">Unread</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                        @if (!review.IsRead)
                                        {
                                            <button type="button" class="btn btn-sm btn-info mark-read-btn" data-id="@review.Id">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        }
                                        <button type="button" class="btn btn-sm btn-danger delete-review-btn" 
                                                data-id="@review.Id" 
                                                data-business-id="@review.BusinessId"
                                                data-toggle="modal" 
                                                data-target="#deleteReviewModal">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteReviewModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this review? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <form id="deleteReviewForm" action="/Review/Delete" method="post">
                    <input type="hidden" id="reviewIdInput" name="id" />
                    <input type="hidden" id="businessIdInput" name="businessId" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            $('#reviewsTable').DataTable({
                order: [[5, 'desc']]  // Sort by date descending
            });
            
            // Mark as read functionality
            $('.mark-read-btn').click(function() {
                const reviewId = $(this).data('id');
                const btn = $(this);
                
                $.ajax({
                    url: '/Review/MarkAsRead',
                    type: 'POST',
                    data: { id: reviewId },
                    success: function(response) {
                        if (response.success) {
                            // Update UI
                            btn.closest('tr').removeClass('table-warning');
                            btn.closest('td').find('.badge').removeClass('badge-warning').addClass('badge-success').text('Read');
                            btn.remove();
                        }
                    }
                });
            });
            
            // Delete modal setup
            $('.delete-review-btn').click(function() {
                const reviewId = $(this).data('id');
                const businessId = $(this).data('business-id');
                
                $('#reviewIdInput').val(reviewId);
                $('#businessIdInput').val(businessId);
            });
            
            // Mark all as read functionality
            $('#markAllAsReadBtn').click(function(e) {
                e.preventDefault();
                
                if (confirm('Mark all reviews as read?')) {
                    // For each unread review, mark it as read
                    $('.mark-read-btn').each(function() {
                        $(this).click();
                    });
                }
            });
        });
    </script>
}
